- name: Install epel
  include_role:
    name: geerlingguy.repo-epel
  when: ansible_os_family == 'RedHat'

- name: Install docker
  include_role:
    name: '{{ roleinputvar }}'
  loop:
    - geerlingguy.docker
    - geerlingguy.pip
  loop_control:
    loop_var: roleinputvar

- name: install python-docker
  pip:
    name:
    - docker

- name: create config dir
  file:
    path: '{{ bc_metrics_server_path_config }}'
    state: directory

- name: set config.js
  template:
    src: "{{ bc_metrics_server_path_config_template }}"
    dest: "{{ bc_metrics_server_path_config }}/config.js"

- name: "Start {{ bc_name }}-{{ bc_component_name }} container"
  register: start_metric_container
  docker_container:
    name: "{{ bc_name }}-{{ bc_component_name }}"
    image: "{{ bc_haya_metrics_server_image }}"
    hostname: "{{ bc_name }}-{{ bc_component_name }}"
    network_mode: host
    working_dir:  /tool
    volumes:
      - "{{ bc_metrics_server_path_config }}/config.js:/tool/config/config.js"
    capabilities:
      - IPC_LOCK
    stop_timeout: 600
    pull: true
    log_driver: "{{ bc_docker_log_driver | default(omit) }}"
    log_options:
      max-size: "{{ '1g' if bc_docker_log_driver == 'json-file' else omit }}"
      fluentd-async-connect: "{{ 'true' if bc_docker_log_driver == 'fluentd' else omit }}"
      fluentd-address: "{{ 'localhost:24224' if bc_docker_log_driver == 'fluentd' else omit  }}"

- name: "Check health {{ bc_component_name }}"
  meta: noop
